/** PRODUCTS */
const products = addSaleInput.productMetas.reduce(
  async (
    accumulator: any[],
    meta: { productID: string; quantity: number }
  ) => {
    const product = await productModel.findOne(
      { productID: meta.productID },
      {},
      { populate: 'category' }
    );
    if (product !== null) {
      (await Promise.resolve(accumulator)).push({
        ...product._doc,
        quantity: meta.quantity,
        subTotal: meta.quantity * product.retailPrice,
      });
    } // end  product
    return await accumulator;
  },
  []
);

if ((await products).length <= 0) {
  return resolve({
    added: false,
    newAdded: null,
    error:
      "[ERROR ADDING PRODUCT]: The product(`s) you're about to sell does not exist in the products stock records.",
  });
}